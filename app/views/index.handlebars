<div class="col-xl-10 col-lg-12 col-md-9">

<nav class="nav nav-pills flex-column flex-sm-row mt-5">
  <a class="flex-sm-fill text-sm-center nav-link active" href="#">Single Video</a>
  <a class="flex-sm-fill text-sm-center nav-link" href="/playlist">Playlist</a>
</nav>

<div class="card o-hidden border-0 shadow-lg">
    <div class="card-body p-0">
        <div class="row">
        <div class="col-8 offset-2">

            <div class="p-2">
                <div class="text-center mt-3">
                    <h1 class="h4 text-gray-900 mb-4">Youtube url to download</h1>
                </div>
                    <div class="form-group">
                        <input type="text" id="url" class="form-control form-control-user" placeholder="Enter valid url">
                    </div>

                    <button class="btn btn-outline-primary btn-user btn-block js-get-info">
                        Get Info
                    </button>
                    <hr>

                <hr>
            </div>

            <div class="p-1 text-center mb-5 d-none" id="video-info">
                <h3 id="video-title">###</h3>
                <img id="video-thumb" src="##" alt="">

                <div class="form-group row mt-3">
                    <label for="format" class="col-12 col-form-label">
                        Available Formats
                    </label>           
                    <div class="col-12">
                        <select name="format" id="format-options" class="form-control">
                        </select>
                    </div>     
                    <div class="col-sm-4 offset-4 mt-3">
                        <button 
                            class="btn btn-block btn-outline-primary" 
                            onclick="downloadFromSelectedFormat()">
                            Download
                        </button>
                    </div>
                </div>
            </div>

            <div class="text-center d-none" id="progress-container">
                Downloaded: <span id="progress-downloaded">0</span>mb/ 
                <span id="progress-total">0</span>mb
                <div class="progress mb-5">
                    <div 
                        id="progress-bar"
                        class="progress-bar progress-bar-striped" 
                        role="progressbar" 
                        style="width: 0%" 
                        aria-valuemax="100">
                    </div>
                </div>
            </div>

        </div>
        </div>
    </div>
</div>

</div>


{{#section 'script'}}

<script type="application/javascript">
var socket = io();

let $progressContainer = $('#progress-container');

socket.on('connect', () => {
    window.clientId = socket.id;
})

socket.on('progress', data => {
    if ($progressContainer.hasClass('d-none')) {
        $progressContainer.removeClass('d-none');
    }

    document.getElementById('progress-downloaded').innerText =  data.downloaded;
    document.getElementById('progress-total').innerText =  data.total;
    document.getElementById('progress-bar').style['width'] = data.percents+'%';

    console.log(data);
})

let getInfo = url => {
    //console.log(url);
    $.post('/get-info', {url: url, clientId: window.clientId}).then(res => {
        console.log('res', res);
        if (res.err) {
            alert(res.msg);
            return false;
        }

        if (res.success && res.data) {
            $videoInfo = $('#video-info');

            if ($videoInfo.hasClass('d-none')) {
                $videoInfo.removeClass('d-none');
            }

            document.getElementById('video-title').innerText =  res.data.title;
            document.getElementById('video-thumb').src =  res.data.thumbnail;

            if (res.data.formats) {
                clearCurrentFormats();
                res.data.formats.forEach(format => {
                    if (!format.hasAudio) {
                        return;
                    }
                    addFormatOption(format);
                })
            }
        }

    }).catch(err => {
        console.error(err);
    })
}

let downloadFromSelectedFormat = () => {
    let mimeType = $('#format-options option:selected').val();
    $.post('/download', {
        url: $('#url').val(),
        mimeType,
        clientId: window.clientId,
        title: document.getElementById('video-title').innerText
    }).then(res => {
        console.log(res)
    }).catch(err => {
        console.err(error);
    })
}

$(document).ready(function() {
    $('.js-get-info').on('click', function() {
        let url = $('#url').val();
        if (!url) {
            alert('Enter url');
            return false;
        }

        getInfo(url);
    })
})

let addFormatOption = format => {
    $('#format-options').append($('<option>', {
        value: format.mimeType,
        text: format.container + " " + format.audioQuality + " ("+format.mimeType+")"
    }));
}

let clearCurrentFormats = () => {
    $('#format-options option').remove();
}


</script>

{{/section}}